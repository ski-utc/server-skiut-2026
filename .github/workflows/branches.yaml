name: Branches CI

on:
  push:
    branches-ignore: [ "main" ]
  pull_request:
    branches-ignore: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_IMAGE_TAG: ghcr.io/${{ github.repository }}:${{ github.sha }}
  PROJECT_IMAGE_LATEST: ghcr.io/${{ github.repository }}:latest

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    container: laravelsail/php83-composer:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
      - run: composer install --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs
      - run: vendor/bin/php-cs-fixer fix --dry-run --diff

  phpstan:
    runs-on: ubuntu-latest
    container: laravelsail/php83-composer:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
      - run: composer install --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs
      - run: vendor/bin/phpstan analyse --memory-limit=512M app bootstrap config database public routes tests

  security-checker:
    runs-on: ubuntu-latest
    container: laravelsail/php83-composer:latest
    steps:
      - uses: actions/checkout@v4
      - run: composer install --no-interaction
      - run: php vendor/bin/security-checker security:check || true

  composer-outdated:
    runs-on: ubuntu-latest
    container: laravelsail/php83-composer:latest
    steps:
      - uses: actions/checkout@v4
      - run: composer install --no-interaction
      - run: composer outdated --direct || true

  run-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
    container: laravelsail/php83-composer:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
      - run: composer install --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs
      - run: apt-get update && apt-get install -y libjpeg-dev libpng-dev libwebp-dev libfreetype6-dev
      - run: pecl install apcu
      - run: docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp
      - run: docker-php-ext-install gd
      - run: docker-php-ext-enable apcu
      - run: echo "apc.enable_cli=1" >> /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini
      - run: cp .env.ci .env
      - run: php artisan key:generate
      - run: php artisan jwt:generate
      - run: mkdir -p /var/www/html/database && touch /var/www/html/database/database.sqlite
      - run: php artisan migrate --force
      - run: php artisan test || php artisan test || php artisan test

  build_docker_image:
    runs-on: ubuntu-latest
    needs: [php-cs-fixer, phpstan, run-tests]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: |
            ${{ env.PROJECT_IMAGE_TAG }}
            ${{ env.PROJECT_IMAGE_LATEST }}

  integration_test:
    runs-on: ubuntu-latest
    needs: build_docker_image
    steps:
      - name: Run container
        run: |
          docker run -d -p 8090:80 --name app ${{ env.PROJECT_IMAGE_TAG }}
          docker exec app php artisan jwt:generate
          sleep 10
          docker exec app curl --fail http://localhost:80/skiutc || (docker logs app && exit 1)
          docker stop app && docker rm app
