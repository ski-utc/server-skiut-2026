stages:
#  - test
  - check
  - package
#  - deploy

check_docker:
  stage: build
  image: eclipse-temurin:17-jdk-alpine
  tags:
    - docker
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - apk add --no-cache docker-cli
    - docker info || echo "docker info failed"

package_docker_image:
  stage: package
  image: docker:latest
  tags:
    - docker
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - main

#laravel_tests:
#  stage: test
#  image: php:8.3
#  tags:
#  - docker
#  - linux
#  services:
#    - mysql:8.0
#  variables:
#    DB_HOST: mysql
#    DB_DATABASE: test_db
#    DB_USERNAME: root
#    DB_PASSWORD: root
#  before_script:
#    - apt-get update && apt-get install -y unzip git libzip-dev libpng-dev libonig-dev libxml2-dev zip
#    - docker-php-ext-install pdo pdo_mysql mbstring zip
#    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
#    - composer install --no-interaction --prefer-dist
#    - cp .env.testing .env
#    - php artisan key:generate
#    - php artisan migrate --force
#  script:
#    - php artisan test
#  only:
#    - merge_requests
#    - main
#    - develop
