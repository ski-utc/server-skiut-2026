stages:
#  - test
  - build
#  - integration
#  - deploy

#laravel_tests:
#  stage: test
#  image: php:8.3
#  tags: [docker]
#  script:
#    - apt-get update && apt-get install -y unzip git libzip-dev zip curl libonig-dev libxml2-dev libpng-dev
#    - docker-php-ext-install pdo_mysql mbstring zip
#    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
#    - composer install --no-interaction --prefer-dist
#    - cp .env.ci .env
#    - php artisan key:generate
#    - php artisan test

variables:
  PROJECT_IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  PROJECT_IMAGE_LATEST: "$CI_REGISTRY_IMAGE:latest"

build_docker_image:
  stage: build
  tags:
    - docker
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
        --context "${CI_PROJECT_DIR}"
        --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
        --destination "$PROJECT_IMAGE_TAG"
        --destination "$PROJECT_IMAGE_LATEST"
  only:
    - main

#integration_test:
#  stage: integration
#  tags: [docker]
#  image: docker:latest
#  script:
#    - docker run -d -p 8080:80 --name test-container "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
#    - sleep 5  # attendre que le conteneur d√©marre
#    - curl --fail http://localhost:8080 || (docker logs test-container && exit 1)
#    - docker stop test-container && docker rm test-container
#  needs: [build_docker_image]
